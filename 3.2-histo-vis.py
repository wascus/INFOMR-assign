import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os
import numpy as np

# Function to read the CSV file and load the data into a Pandas DataFrame
def load_csv_to_dataframe(csv_file):
    return pd.read_csv(csv_file)


#create a folder to save the plots
def create_plots_directory(directory='Plots'):
    if not os.path.exists(directory):
        os.makedirs(directory)


#make a separate plot for each category per descriptor
def plot_kde_by_category(dataframe, descriptor_name, save_directory, histogram_data):
    categories = dataframe[dataframe.columns[0]].unique()  #get categories from the df

    for category in categories:
        plt.figure(figsize=(10, 6))
        #filter the df for the current category
        category_data = dataframe[dataframe[dataframe.columns[0]] == category]

        #loop over each file and plot the KDE for that files data
        for model in category_data['model'].unique():
            model_data = category_data[category_data['model'] == model][descriptor_name]
            sns.kdeplot(model_data, label=model, lw=2)

            # Calculate histogram and save the bins
            hist, _ = np.histogram(model_data, bins=50, density=True)
            histogram_data.append([category, model, descriptor_name, *hist])

        plt.title(f"KDE for {descriptor_name} Descriptor (Category: {category})")
        plt.xlabel('Value')
        plt.ylabel('Density')
        plt.grid(True)
        plt.savefig(os.path.join(save_directory, f'kde_{descriptor_name}_{category}.png'))
        plt.close()


#make a plot where each line is a different category, per descriptor
def plot_all_kde(dataframe, descriptor_name, save_directory):
    plt.figure(figsize=(10, 6))
    categories = dataframe[dataframe.columns[0]].unique()  #get categories from the df

    #plot the KDE for each category
    for category in categories:
        category_data = dataframe[dataframe[dataframe.columns[0]] == category]
        sns.kdeplot(category_data[descriptor_name], label=category, lw=2)

    plt.title(f"KDE for {descriptor_name} Descriptor (All Categories)")
    plt.xlabel('Value')
    plt.ylabel('Density')
    plt.grid(True)
    plt.savefig(os.path.join(save_directory, f'kde_{descriptor_name}.png'))
    plt.close()


# Function to generate plots for all descriptors by model and save histograms
def plot_all_descriptors(csv_file):
    df = load_csv_to_dataframe(csv_file)

    # Create a directory to save plots
    create_plots_directory('Plots')

    # List of descriptors to plot
    descriptors = ['A3', 'D1', 'D2', 'D3', 'D4']

    # Initialize a list to store histogram data
    histogram_data = []

    # Plot each descriptor with separate lines for each model
    for descriptor in descriptors:
        plot_kde_by_category(df, descriptor, 'Plots', histogram_data)
        plot_all_kde(df, descriptor, 'Plots')

    # Save histogram data to CSV
    histogram_df = pd.DataFrame(histogram_data, columns=['category', 'model', 'descriptor'] + [f'bin{i+1}' for i in range(50)])
    histogram_df_pivot = histogram_df.pivot_table(
        index=['category', 'model'],
        values=[f'bin{i + 1}' for i in range(50)],
        aggfunc=np.mean  # Or another aggregation function like np.sum
    )
    histogram_df_pivot.reset_index(inplace=True)
    histogram_df_pivot.columns.name = None  # Remove multi-level index naming
    histogram_df_pivot.to_csv('histogram_data.csv', index=False)


if __name__ == "__main__":
    csv_file = 'updated_file2.csv'  # The CSV file generated by the first script
    plot_all_descriptors(csv_file)
