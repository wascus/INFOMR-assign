import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os


# Function to read the CSV file and load the data into a Pandas DataFrame
def load_csv_to_dataframe(csv_file):
    return pd.read_csv(csv_file)


#create a folder to save the plots
def create_plots_directory(directory='Plots'):
    if not os.path.exists(directory):
        os.makedirs(directory)


#make a separate plot for each category per descriptor
def plot_kde_by_category(dataframe, descriptor_name, save_directory):
    categories = dataframe[dataframe.columns[0]].unique()  #get categories from the df

    for category in categories:
        plt.figure(figsize=(10, 6))
        #filter the df for the current category
        category_data = dataframe[dataframe[dataframe.columns[0]] == category]

        #loop over each file and plot the KDE for that files data
        for model in category_data['model'].unique():
            model_data = category_data[category_data['model'] == model][descriptor_name]
            sns.kdeplot(model_data, label=model, lw=2)

        plt.title(f"KDE for {descriptor_name} Descriptor (Category: {category})")
        plt.xlabel('Value')
        plt.ylabel('Density')
        plt.grid(True)

        #save the plot in the folder and close the figure to save memory
        plt.savefig(os.path.join(save_directory, f'kde_{descriptor_name}_{category}.png'))
        plt.close()


#make a plot where each line is a different category, per descriptor
def plot_all_average_kde(dataframe, descriptor_name, save_directory):
    plt.figure(figsize=(10, 6))
    categories = dataframe[dataframe.columns[0]].unique()  #get categories from the df

    #calculate and plot the average KDE for each category
    for category in categories:
        category_data = dataframe[dataframe[dataframe.columns[0]] == category]
        average_data = category_data.groupby('model')[descriptor_name].mean().reset_index()
        sns.kdeplot(average_data[descriptor_name], label=category, lw=2)

    plt.title(f"Average KDE for {descriptor_name} Descriptor (All Categories)")
    plt.xlabel('Value')
    plt.ylabel('Density')
    plt.grid(True)

    if descriptor_name in ['D1', 'D2', 'D3', 'D4']:
        plt.xlim(-1.5, 1.5) #adjust x-axis range to show the plot better

    #save the plot in the folder and close the figure to save memory
    plt.savefig(os.path.join(save_directory, f'average_kde_{descriptor_name}.png'))
    plt.close()


# Function to generate plots for all descriptors by model
def plot_all_descriptors_by_model(csv_file):
    df = load_csv_to_dataframe(csv_file)

    # Create a directory to save plots
    create_plots_directory()

    # List of descriptors to plot
    descriptors = ['A3', 'D1', 'D2', 'D3', 'D4']

    # Plot each descriptor with separate lines for each model
    for descriptor in descriptors:
        plot_kde_by_category(df, descriptor, 'Plots')
        plot_all_average_kde(df, descriptor, 'Plots')


if __name__ == "__main__":
    csv_file = 'shape_descriptors.csv'  # The CSV file generated by the first script
    plot_all_descriptors_by_model(csv_file)


if __name__ == "__main__":
    csv_file = 'shape_descriptors.csv'  # The CSV file generated by the first script
    plot_all_descriptors_by_model(csv_file)
